// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  name            String?
  password        String
  role            String          @default("USER")
  isEmailVerified Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  tokens          Token[]
  SearchHistory   SearchHistory[]
}

model Token {
  id          Int      @id @default(autoincrement())
  token       String
  type        String
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model SearchHistory {
  id          String   @id @default(uuid())
  userId      Int
  query       String
  filters     String?
  resultCount Int
  searchTime  Float
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}

model SearchCache {
  id        String   @id @default(uuid())
  cacheKey  String   @unique
  results   String
  hitCount  Int      @default(1)
  expiresAt DateTime
  createdAt DateTime @default(now())
}
